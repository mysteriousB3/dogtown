<nav aria-label='breadcrumb'>
    <ol class='breadcrumb breadcrumb-arrow'>
        <li class='breadcrumb-item'><a href='/sellerpackage/index'>sellerpackage</a></li>
        <li class='breadcrumb-item active' aria-current='page'>edit</li>
    </ol>
</nav>
<div id='app1' v-cloak>

    <v-app>
         
        <v-card>
          <v-card-title>
          </v-card-title>
          <v-card-text>
            <div style="margin:20px">
<v-select return-object
		  outlined
          v-model="select_packageDetail"
          :items="packageDetails"
          item-text='value'
          menu-props="auto"
          label="ชื่อแพ็กเกจ"
          show="packageDetailName" 
           
  ></v-select>
</div>

 <v-date-picker
      v-model="sellerpackage.packageBuyingDateTime"
      class="mt-4"
      
      
></v-date-picker>

 <v-date-picker
      v-model="sellerpackage.packageStartingDateTime"
      class="mt-4"
      
      
></v-date-picker>

 <v-date-picker
      v-model="sellerpackage.packageEndingDateTime"
      class="mt-4"
      
      
></v-date-picker>

<div style="margin:20px"><v-text-field  v-model="sellerpackage.totalPackagePurchase" label="จำนวนเงินที่ต้องชำระ" ></v-text-field></div>

<v-col cols="3">
  <v-card>
    <v-card-text>
     <v-img :src="paymentEvidenceData"   ></v-img>
    </v-card-text>
    <v-card-actions>
      <v-file-input label="หลักฐานในการชำระเงิน" v-model="paymentEvidence" @@change="preview_paymentEvidence"  ></v-file-input>
    </v-card-actions>
  </v-card>
 
</v-col>
 

<div style="margin:20px"><v-text-field  v-model="sellerpackage.packageStatus" label="อนุญาตเริ่มใช้แพ็กเกจ" ></v-text-field></div>

<div style="margin:20px"><v-text-field  v-model="sellerpackage.totalPostAvailable" label="จำนวนโพสมีอยู่" ></v-text-field></div>

<div style="margin:20px"><v-text-field  v-model="sellerpackage.sellerId" label="sellerId" ></v-text-field></div>




          </v-card-text>
          <v-card-actions>
             <v-btn @@click='edit_sellerpackage' color='blue' outlined>
                <v-icon>
                    mdi-content-save-edit
                </v-icon>
             </v-btn>
          </v-card-actions>
          
        </v-card>
    </v-app>
</div>
@section scripts{
    <script>
        var app;
            var component = {
                vuetify: new Vuetify(theme())
                ,
                el:'#app1'
                ,
                data:{
                    sellerpackage:{}
                    ,
                    packageDetails:[] ,
select_packageDetail:{},
paymentEvidenceData:'',
				paymentEvidence:[],


                }//edata
                ,
                created(){
                  this.sellerpackage = @Html.Raw(Json.Serialize(@ViewBag.sellerpackage));
                     this.packageDetails = @Html.Raw(Json.Serialize(@ViewBag.packageDetails));
this.select_packageDetail = @Html.Raw(Json.Serialize(@ViewBag.select_packageDetail));

this.paymentEvidenceData ="/evidencePic/"+this.sellerpackage.sellerpackageId+"paymentEvidence.png";

                     
                }//ecreated
                ,
                methods:{
                  edit_sellerpackage(){
                   									this.sellerpackage.packageDetailId = this.select_packageDetail.packageDetailId;

this.sellerpackage.paymentEvidence = this.paymentEvidenceData;

                    var url = '/sellerpackage/edit';
                    var param= this.sellerpackage;
                    $.post(url,param)
                    .done(res =>{
                          if(res.error == -1){
                               window.location = '/sellerpackage/index';
                          }
                          else{
                             alert(res.exception);
                          }
                    });
                    
                  }//ef
                  ,                 
                  preview_paymentEvidence(){
 						const reader = new FileReader();
                		reader.readAsDataURL(this.paymentEvidence); //file1
                		reader.onload = () => {
                			this.paymentEvidenceData = reader.result; //imageData
                		}//ev
                		reader.onerror = function (error) {
                			console.log('Error: ', error)
                		}//ev

                  }//ef    
                  ,


                }//emethod
                ,
                 computed:{
                   

                 }//ecomputed
            };
            app = new Vue(component);


    </script>

}
